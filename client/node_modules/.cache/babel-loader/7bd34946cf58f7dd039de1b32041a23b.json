{"ast":null,"code":"var _jsxFileName = \"R:\\\\New_Block\\\\client\\\\src\\\\components\\\\Record.jsx\";\nimport { Card, CardContent, Typography, Grid, Box } from '@mui/material';\nimport React from 'react';\nimport DescriptionRoundedIcon from '@mui/icons-material/DescriptionRounded';\nimport { grey } from '@mui/material/colors';\nimport moment from 'moment';\nimport CloudDownloadRoundedIcon from '@mui/icons-material/CloudDownloadRounded';\nimport CryptoJS from \"crypto-js\";\nimport CustomButton from './CustomButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Record = _ref => {\n  let {\n    record\n  } = _ref;\n  const [cid, name, patientId, doctorId, timestamp] = record; // const [b64,setb64] = useState(\"\")\n\n  function convertWordArrayToUint8Array(wordArray) {\n    var arrayOfWords = wordArray.hasOwnProperty(\"words\") ? wordArray.words : [];\n    var length = wordArray.hasOwnProperty(\"sigBytes\") ? wordArray.sigBytes : arrayOfWords.length * 4;\n    var uInt8Array = new Uint8Array(length),\n        index = 0,\n        word,\n        i;\n\n    for (i = 0; i < length; i++) {\n      word = arrayOfWords[i];\n      uInt8Array[index++] = word >> 24;\n      uInt8Array[index++] = word >> 16 & 0xff;\n      uInt8Array[index++] = word >> 8 & 0xff;\n      uInt8Array[index++] = word & 0xff;\n    }\n\n    return uInt8Array;\n  }\n\n  const fetchData = async () => {\n    try {\n      const keyCID = \"oiewrhg5623475vbeihc39873948^&%E@ZfytfE#&@^ tf1wufhx231277!*YE2\";\n      const decryptedBytes = CryptoJS.AES.decrypt(cid, keyCID);\n      const decryptedCID = decryptedBytes.toString(CryptoJS.enc.Utf8); // Decryption: I: Base64 encoded string (OpenSSL-format) -> O: WordArray\n\n      const response = await fetch(`https://med-chain.infura-ipfs.io/ipfs/${decryptedCID}`);\n\n      if (!response.ok) {\n        throw new Error('Failed to fetch data');\n      }\n\n      const key = \"askfalq234234123kl4jlkfjalkdsfjq4j!@#LK%Ds#\";\n      const textData = await response.text();\n      var decrypted = CryptoJS.AES.decrypt(textData, key); // Decryption: I: Base64 encoded string (OpenSSL-format) -> O: WordArray\n\n      var typedArray = convertWordArrayToUint8Array(decrypted); // Convert: WordArray -> typed array\n\n      var fileDec = new Blob([typedArray]);\n      var a = document.createElement(\"a\");\n      var url = window.URL.createObjectURL(fileDec);\n      var filename = name;\n      a.href = url;\n      a.download = filename;\n      a.click();\n      window.URL.revokeObjectURL(url);\n      console.log(response);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 1,\n          children: /*#__PURE__*/_jsxDEV(DescriptionRoundedIcon, {\n            style: {\n              fontSize: 40,\n              color: grey[700]\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 3,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            display: \"flex\",\n            flexDirection: \"column\",\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              color: grey[600],\n              children: \"Record name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 5,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            display: \"flex\",\n            flexDirection: \"column\",\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              color: grey[600],\n              children: \"Doctor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: doctorId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 2,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            display: \"flex\",\n            flexDirection: \"column\",\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              color: grey[600],\n              children: \"Created time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: moment.unix(timestamp).format('MM-DD-YYYY HH:mm')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 1,\n          children: /*#__PURE__*/_jsxDEV(CustomButton, {\n            handleClick: () => fetchData(),\n            children: /*#__PURE__*/_jsxDEV(CloudDownloadRoundedIcon, {\n              style: {\n                color: 'white'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Record;\nexport default Record;\n\nvar _c;\n\n$RefreshReg$(_c, \"Record\");","map":{"version":3,"names":["Card","CardContent","Typography","Grid","Box","React","DescriptionRoundedIcon","grey","moment","CloudDownloadRoundedIcon","CryptoJS","CustomButton","Record","record","cid","name","patientId","doctorId","timestamp","convertWordArrayToUint8Array","wordArray","arrayOfWords","hasOwnProperty","words","length","sigBytes","uInt8Array","Uint8Array","index","word","i","fetchData","keyCID","decryptedBytes","AES","decrypt","decryptedCID","toString","enc","Utf8","response","fetch","ok","Error","key","textData","text","decrypted","typedArray","fileDec","Blob","a","document","createElement","url","window","URL","createObjectURL","filename","href","download","click","revokeObjectURL","console","log","error","fontSize","color","unix","format"],"sources":["R:/New_Block/client/src/components/Record.jsx"],"sourcesContent":["import { Card, CardContent, Typography, Grid, Box } from '@mui/material'\r\nimport React from 'react'\r\nimport DescriptionRoundedIcon from '@mui/icons-material/DescriptionRounded'\r\nimport { grey } from '@mui/material/colors'\r\nimport moment from 'moment'\r\nimport CloudDownloadRoundedIcon from '@mui/icons-material/CloudDownloadRounded'\r\nimport CryptoJS from \"crypto-js\";\r\nimport CustomButton from './CustomButton'\r\n\r\n\r\n\r\n\r\nconst Record = ({ record }) => {\r\n  const [cid, name, patientId, doctorId, timestamp] = record\r\n  // const [b64,setb64] = useState(\"\")\r\n\r\n  function convertWordArrayToUint8Array(wordArray) {\r\n    var arrayOfWords = wordArray.hasOwnProperty(\"words\") ? wordArray.words : [];\r\n    var length = wordArray.hasOwnProperty(\"sigBytes\") ? wordArray.sigBytes : arrayOfWords.length * 4;\r\n    var uInt8Array = new Uint8Array(length), index=0, word, i;\r\n    for (i=0; i<length; i++) {\r\n        word = arrayOfWords[i];\r\n        uInt8Array[index++] = word >> 24;\r\n        uInt8Array[index++] = (word >> 16) & 0xff;\r\n        uInt8Array[index++] = (word >> 8) & 0xff;\r\n        uInt8Array[index++] = word & 0xff;\r\n    }\r\n    return uInt8Array;\r\n}\r\n\r\n\r\n const fetchData = async () => {\r\n      try {\r\n        const keyCID = \"oiewrhg5623475vbeihc39873948^&%E@ZfytfE#&@^ tf1wufhx231277!*YE2\"\r\n       const decryptedBytes = CryptoJS.AES.decrypt(cid, keyCID);\r\n        const decryptedCID = decryptedBytes.toString(CryptoJS.enc.Utf8);              // Decryption: I: Base64 encoded string (OpenSSL-format) -> O: WordArray\r\n        const response = await fetch(`https://med-chain.infura-ipfs.io/ipfs/${decryptedCID}`);\r\n        if (!response.ok) {\r\n          throw new Error('Failed to fetch data');\r\n        }\r\n          const key = \"askfalq234234123kl4jlkfjalkdsfjq4j!@#LK%Ds#\";\r\n         const textData = await response.text()\r\n       var decrypted = CryptoJS.AES.decrypt(textData, key);               // Decryption: I: Base64 encoded string (OpenSSL-format) -> O: WordArray\r\n        var typedArray = convertWordArrayToUint8Array(decrypted);               // Convert: WordArray -> typed array\r\n\r\n        var fileDec = new Blob([typedArray]);\r\n\r\n        var a = document.createElement(\"a\");\r\n        var url = window.URL.createObjectURL(fileDec);\r\n        var filename = name;\r\n        a.href = url;\r\n        a.download = filename;\r\n        a.click();\r\n        window.URL.revokeObjectURL(url);\r\n\r\n        \r\n        console.log(response)\r\n\r\n        \r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n      }\r\n    };\r\n\r\n\r\n  return (\r\n    <Card>\r\n      <CardContent>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={1}>\r\n            <DescriptionRoundedIcon style={{ fontSize: 40, color: grey[700] }} />\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <Box display='flex' flexDirection='column'>\r\n              <Typography variant='h6' color={grey[600]}>\r\n                Record name\r\n              </Typography>\r\n              <Typography variant='h6'>{name}</Typography>\r\n            </Box>\r\n          </Grid>\r\n          <Grid item xs={5}>\r\n            <Box display='flex' flexDirection='column'>\r\n              <Typography variant='h6' color={grey[600]}>\r\n                Doctor\r\n              </Typography>\r\n              <Typography variant='h6'>{doctorId}</Typography>\r\n            </Box>\r\n          </Grid>\r\n          <Grid item xs={2}>\r\n            <Box display='flex' flexDirection='column'>\r\n              <Typography variant='h6' color={grey[600]}>\r\n                Created time\r\n              </Typography>\r\n              <Typography variant='h6'>{moment.unix(timestamp).format('MM-DD-YYYY HH:mm')}</Typography>\r\n            </Box>\r\n          </Grid>\r\n          <Grid item xs={1}>\r\n            <CustomButton handleClick={() => fetchData()}>\r\n                      <CloudDownloadRoundedIcon style={{ color: 'white' }} />\r\n            </CustomButton>\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  )\r\n}\r\n\r\n\r\nexport default Record\r\n"],"mappings":";AAAA,SAASA,IAAT,EAAeC,WAAf,EAA4BC,UAA5B,EAAwCC,IAAxC,EAA8CC,GAA9C,QAAyD,eAAzD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,sBAAP,MAAmC,wCAAnC;AACA,SAASC,IAAT,QAAqB,sBAArB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,wBAAP,MAAqC,0CAArC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;;AAKA,MAAMC,MAAM,GAAG,QAAgB;EAAA,IAAf;IAAEC;EAAF,CAAe;EAC7B,MAAM,CAACC,GAAD,EAAMC,IAAN,EAAYC,SAAZ,EAAuBC,QAAvB,EAAiCC,SAAjC,IAA8CL,MAApD,CAD6B,CAE7B;;EAEA,SAASM,4BAAT,CAAsCC,SAAtC,EAAiD;IAC/C,IAAIC,YAAY,GAAGD,SAAS,CAACE,cAAV,CAAyB,OAAzB,IAAoCF,SAAS,CAACG,KAA9C,GAAsD,EAAzE;IACA,IAAIC,MAAM,GAAGJ,SAAS,CAACE,cAAV,CAAyB,UAAzB,IAAuCF,SAAS,CAACK,QAAjD,GAA4DJ,YAAY,CAACG,MAAb,GAAsB,CAA/F;IACA,IAAIE,UAAU,GAAG,IAAIC,UAAJ,CAAeH,MAAf,CAAjB;IAAA,IAAyCI,KAAK,GAAC,CAA/C;IAAA,IAAkDC,IAAlD;IAAA,IAAwDC,CAAxD;;IACA,KAAKA,CAAC,GAAC,CAAP,EAAUA,CAAC,GAACN,MAAZ,EAAoBM,CAAC,EAArB,EAAyB;MACrBD,IAAI,GAAGR,YAAY,CAACS,CAAD,CAAnB;MACAJ,UAAU,CAACE,KAAK,EAAN,CAAV,GAAsBC,IAAI,IAAI,EAA9B;MACAH,UAAU,CAACE,KAAK,EAAN,CAAV,GAAuBC,IAAI,IAAI,EAAT,GAAe,IAArC;MACAH,UAAU,CAACE,KAAK,EAAN,CAAV,GAAuBC,IAAI,IAAI,CAAT,GAAc,IAApC;MACAH,UAAU,CAACE,KAAK,EAAN,CAAV,GAAsBC,IAAI,GAAG,IAA7B;IACH;;IACD,OAAOH,UAAP;EACH;;EAGA,MAAMK,SAAS,GAAG,YAAY;IACzB,IAAI;MACF,MAAMC,MAAM,GAAG,iEAAf;MACD,MAAMC,cAAc,GAAGvB,QAAQ,CAACwB,GAAT,CAAaC,OAAb,CAAqBrB,GAArB,EAA0BkB,MAA1B,CAAvB;MACC,MAAMI,YAAY,GAAGH,cAAc,CAACI,QAAf,CAAwB3B,QAAQ,CAAC4B,GAAT,CAAaC,IAArC,CAArB,CAHE,CAG4E;;MAC9E,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,yCAAwCL,YAAa,EAAvD,CAA5B;;MACA,IAAI,CAACI,QAAQ,CAACE,EAAd,EAAkB;QAChB,MAAM,IAAIC,KAAJ,CAAU,sBAAV,CAAN;MACD;;MACC,MAAMC,GAAG,GAAG,6CAAZ;MACD,MAAMC,QAAQ,GAAG,MAAML,QAAQ,CAACM,IAAT,EAAvB;MACF,IAAIC,SAAS,GAAGrC,QAAQ,CAACwB,GAAT,CAAaC,OAAb,CAAqBU,QAArB,EAA+BD,GAA/B,CAAhB,CAVG,CAUgE;;MAClE,IAAII,UAAU,GAAG7B,4BAA4B,CAAC4B,SAAD,CAA7C,CAXE,CAWsE;;MAExE,IAAIE,OAAO,GAAG,IAAIC,IAAJ,CAAS,CAACF,UAAD,CAAT,CAAd;MAEA,IAAIG,CAAC,GAAGC,QAAQ,CAACC,aAAT,CAAuB,GAAvB,CAAR;MACA,IAAIC,GAAG,GAAGC,MAAM,CAACC,GAAP,CAAWC,eAAX,CAA2BR,OAA3B,CAAV;MACA,IAAIS,QAAQ,GAAG3C,IAAf;MACAoC,CAAC,CAACQ,IAAF,GAASL,GAAT;MACAH,CAAC,CAACS,QAAF,GAAaF,QAAb;MACAP,CAAC,CAACU,KAAF;MACAN,MAAM,CAACC,GAAP,CAAWM,eAAX,CAA2BR,GAA3B;MAGAS,OAAO,CAACC,GAAR,CAAYxB,QAAZ;IAGD,CA3BD,CA2BE,OAAOyB,KAAP,EAAc;MACdF,OAAO,CAACE,KAAR,CAAc,sBAAd,EAAsCA,KAAtC;IACD;EACF,CA/BJ;;EAkCC,oBACE,QAAC,IAAD;IAAA,uBACE,QAAC,WAAD;MAAA,uBACE,QAAC,IAAD;QAAM,SAAS,MAAf;QAAgB,OAAO,EAAE,CAAzB;QAAA,wBACE,QAAC,IAAD;UAAM,IAAI,MAAV;UAAW,EAAE,EAAE,CAAf;UAAA,uBACE,QAAC,sBAAD;YAAwB,KAAK,EAAE;cAAEC,QAAQ,EAAE,EAAZ;cAAgBC,KAAK,EAAE5D,IAAI,CAAC,GAAD;YAA3B;UAA/B;YAAA;YAAA;YAAA;UAAA;QADF;UAAA;UAAA;UAAA;QAAA,QADF,eAIE,QAAC,IAAD;UAAM,IAAI,MAAV;UAAW,EAAE,EAAE,CAAf;UAAA,uBACE,QAAC,GAAD;YAAK,OAAO,EAAC,MAAb;YAAoB,aAAa,EAAC,QAAlC;YAAA,wBACE,QAAC,UAAD;cAAY,OAAO,EAAC,IAApB;cAAyB,KAAK,EAAEA,IAAI,CAAC,GAAD,CAApC;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QADF,eAIE,QAAC,UAAD;cAAY,OAAO,EAAC,IAApB;cAAA,UAA0BQ;YAA1B;cAAA;cAAA;cAAA;YAAA,QAJF;UAAA;YAAA;YAAA;YAAA;UAAA;QADF;UAAA;UAAA;UAAA;QAAA,QAJF,eAYE,QAAC,IAAD;UAAM,IAAI,MAAV;UAAW,EAAE,EAAE,CAAf;UAAA,uBACE,QAAC,GAAD;YAAK,OAAO,EAAC,MAAb;YAAoB,aAAa,EAAC,QAAlC;YAAA,wBACE,QAAC,UAAD;cAAY,OAAO,EAAC,IAApB;cAAyB,KAAK,EAAER,IAAI,CAAC,GAAD,CAApC;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QADF,eAIE,QAAC,UAAD;cAAY,OAAO,EAAC,IAApB;cAAA,UAA0BU;YAA1B;cAAA;cAAA;cAAA;YAAA,QAJF;UAAA;YAAA;YAAA;YAAA;UAAA;QADF;UAAA;UAAA;UAAA;QAAA,QAZF,eAoBE,QAAC,IAAD;UAAM,IAAI,MAAV;UAAW,EAAE,EAAE,CAAf;UAAA,uBACE,QAAC,GAAD;YAAK,OAAO,EAAC,MAAb;YAAoB,aAAa,EAAC,QAAlC;YAAA,wBACE,QAAC,UAAD;cAAY,OAAO,EAAC,IAApB;cAAyB,KAAK,EAAEV,IAAI,CAAC,GAAD,CAApC;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QADF,eAIE,QAAC,UAAD;cAAY,OAAO,EAAC,IAApB;cAAA,UAA0BC,MAAM,CAAC4D,IAAP,CAAYlD,SAAZ,EAAuBmD,MAAvB,CAA8B,kBAA9B;YAA1B;cAAA;cAAA;cAAA;YAAA,QAJF;UAAA;YAAA;YAAA;YAAA;UAAA;QADF;UAAA;UAAA;UAAA;QAAA,QApBF,eA4BE,QAAC,IAAD;UAAM,IAAI,MAAV;UAAW,EAAE,EAAE,CAAf;UAAA,uBACE,QAAC,YAAD;YAAc,WAAW,EAAE,MAAMtC,SAAS,EAA1C;YAAA,uBACU,QAAC,wBAAD;cAA0B,KAAK,EAAE;gBAAEoC,KAAK,EAAE;cAAT;YAAjC;cAAA;cAAA;cAAA;YAAA;UADV;YAAA;YAAA;YAAA;UAAA;QADF;UAAA;UAAA;UAAA;QAAA,QA5BF;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAwCD,CA7FD;;KAAMvD,M;AAgGN,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}