{"ast":null,"code":"'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useForkRef as useForkRef, unstable_useId as useId, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { menuReducer } from './menuReducer';\nimport { DropdownContext } from '../useDropdown/DropdownContext';\nimport { useList } from '../useList';\nimport { DropdownActionTypes } from '../useDropdown';\nimport { useCompoundParent } from '../useCompound';\nimport { combineHooksSlotProps } from '../utils/combineHooksSlotProps';\nimport { extractEventHandlers } from '../utils/extractEventHandlers';\nconst FALLBACK_MENU_CONTEXT = {\n  dispatch: () => {},\n  popupId: '',\n  registerPopup: () => {},\n  registerTrigger: () => {},\n  state: {\n    open: true\n  },\n  triggerElement: null\n};\n/**\n *\n * Demos:\n *\n * - [Menu](https://mui.com/base-ui/react-menu/#hooks)\n *\n * API:\n *\n * - [useMenu API](https://mui.com/base-ui/react-menu/hooks-api/#use-menu)\n */\n\nexport function useMenu() {\n  let parameters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  var _useId, _React$useContext;\n\n  const {\n    listboxRef: listboxRefProp,\n    onItemsChange,\n    id: idParam,\n    disabledItemsFocusable = true,\n    disableListWrap = false,\n    autoFocus = true,\n    componentName = 'useMenu'\n  } = parameters;\n  const rootRef = React.useRef(null);\n  const handleRef = useForkRef(rootRef, listboxRefProp);\n  const listboxId = (_useId = useId(idParam)) != null ? _useId : '';\n  const {\n    state: {\n      open\n    },\n    dispatch: menuDispatch,\n    triggerElement,\n    registerPopup\n  } = (_React$useContext = React.useContext(DropdownContext)) != null ? _React$useContext : FALLBACK_MENU_CONTEXT; // store the initial open state to prevent focus stealing\n  // (the first menu items gets focued only when the menu is opened by the user)\n\n  const isInitiallyOpen = React.useRef(open);\n  const {\n    subitems,\n    contextValue: compoundComponentContextValue\n  } = useCompoundParent();\n  const subitemKeys = React.useMemo(() => Array.from(subitems.keys()), [subitems]);\n  const getItemDomElement = React.useCallback(itemId => {\n    var _subitems$get$ref$cur, _subitems$get;\n\n    if (itemId == null) {\n      return null;\n    }\n\n    return (_subitems$get$ref$cur = (_subitems$get = subitems.get(itemId)) == null ? void 0 : _subitems$get.ref.current) != null ? _subitems$get$ref$cur : null;\n  }, [subitems]);\n  const isItemDisabled = React.useCallback(id => {\n    var _subitems$get2;\n\n    return (subitems == null || (_subitems$get2 = subitems.get(id)) == null ? void 0 : _subitems$get2.disabled) || false;\n  }, [subitems]);\n  const getItemAsString = React.useCallback(id => {\n    var _subitems$get3, _subitems$get4;\n\n    return ((_subitems$get3 = subitems.get(id)) == null ? void 0 : _subitems$get3.label) || ((_subitems$get4 = subitems.get(id)) == null || (_subitems$get4 = _subitems$get4.ref.current) == null ? void 0 : _subitems$get4.innerText);\n  }, [subitems]);\n  const reducerActionContext = React.useMemo(() => ({\n    listboxRef: rootRef\n  }), [rootRef]);\n  const {\n    dispatch: listDispatch,\n    getRootProps: getListRootProps,\n    contextValue: listContextValue,\n    state: {\n      highlightedValue\n    },\n    rootRef: mergedListRef\n  } = useList({\n    disabledItemsFocusable,\n    disableListWrap,\n    focusManagement: 'DOM',\n    getItemDomElement,\n    getInitialState: () => ({\n      selectedValues: [],\n      highlightedValue: null\n    }),\n    isItemDisabled,\n    items: subitemKeys,\n    getItemAsString,\n    rootRef: handleRef,\n    onItemsChange,\n    reducerActionContext,\n    selectionMode: 'none',\n    stateReducer: menuReducer,\n    componentName\n  });\n  useEnhancedEffect(() => {\n    registerPopup(listboxId);\n  }, [listboxId, registerPopup]);\n  React.useEffect(() => {\n    if (open && autoFocus && highlightedValue && !isInitiallyOpen.current) {\n      var _subitems$get5;\n\n      (_subitems$get5 = subitems.get(highlightedValue)) == null || (_subitems$get5 = _subitems$get5.ref) == null || (_subitems$get5 = _subitems$get5.current) == null || _subitems$get5.focus();\n    }\n  }, [open, autoFocus, highlightedValue, subitems, subitemKeys]);\n  React.useEffect(() => {\n    var _rootRef$current; // set focus to the highlighted item (but prevent stealing focus from other elements on the page)\n\n\n    if ((_rootRef$current = rootRef.current) != null && _rootRef$current.contains(document.activeElement) && highlightedValue !== null) {\n      var _subitems$get6;\n\n      subitems == null || (_subitems$get6 = subitems.get(highlightedValue)) == null || (_subitems$get6 = _subitems$get6.ref.current) == null || _subitems$get6.focus();\n    }\n  }, [highlightedValue, subitems]);\n\n  const createHandleBlur = otherHandlers => event => {\n    var _otherHandlers$onBlur, _rootRef$current2;\n\n    (_otherHandlers$onBlur = otherHandlers.onBlur) == null || _otherHandlers$onBlur.call(otherHandlers, event);\n\n    if (event.defaultMuiPrevented) {\n      return;\n    }\n\n    if ((_rootRef$current2 = rootRef.current) != null && _rootRef$current2.contains(event.relatedTarget) || event.relatedTarget === triggerElement) {\n      return;\n    }\n\n    menuDispatch({\n      type: DropdownActionTypes.blur,\n      event\n    });\n  };\n\n  const createHandleKeyDown = otherHandlers => event => {\n    var _otherHandlers$onKeyD;\n\n    (_otherHandlers$onKeyD = otherHandlers.onKeyDown) == null || _otherHandlers$onKeyD.call(otherHandlers, event);\n\n    if (event.defaultMuiPrevented) {\n      return;\n    }\n\n    if (event.key === 'Escape') {\n      menuDispatch({\n        type: DropdownActionTypes.escapeKeyDown,\n        event\n      });\n    }\n  };\n\n  const getOwnListboxHandlers = function () {\n    let otherHandlers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return {\n      onBlur: createHandleBlur(otherHandlers),\n      onKeyDown: createHandleKeyDown(otherHandlers)\n    };\n  };\n\n  const getListboxProps = function () {\n    let externalProps = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const getCombinedRootProps = combineHooksSlotProps(getOwnListboxHandlers, getListRootProps);\n    const externalEventHandlers = extractEventHandlers(externalProps);\n    return _extends({}, externalProps, externalEventHandlers, getCombinedRootProps(externalEventHandlers), {\n      id: listboxId,\n      role: 'menu'\n    });\n  };\n\n  React.useDebugValue({\n    subitems,\n    highlightedValue\n  });\n  return {\n    contextValue: _extends({}, compoundComponentContextValue, listContextValue),\n    dispatch: listDispatch,\n    getListboxProps,\n    highlightedValue,\n    listboxRef: mergedListRef,\n    menuItems: subitems,\n    open,\n    triggerElement\n  };\n}","map":{"version":3,"names":["_extends","React","unstable_useForkRef","useForkRef","unstable_useId","useId","unstable_useEnhancedEffect","useEnhancedEffect","menuReducer","DropdownContext","useList","DropdownActionTypes","useCompoundParent","combineHooksSlotProps","extractEventHandlers","FALLBACK_MENU_CONTEXT","dispatch","popupId","registerPopup","registerTrigger","state","open","triggerElement","useMenu","parameters","_useId","_React$useContext","listboxRef","listboxRefProp","onItemsChange","id","idParam","disabledItemsFocusable","disableListWrap","autoFocus","componentName","rootRef","useRef","handleRef","listboxId","menuDispatch","useContext","isInitiallyOpen","subitems","contextValue","compoundComponentContextValue","subitemKeys","useMemo","Array","from","keys","getItemDomElement","useCallback","itemId","_subitems$get$ref$cur","_subitems$get","get","ref","current","isItemDisabled","_subitems$get2","disabled","getItemAsString","_subitems$get3","_subitems$get4","label","innerText","reducerActionContext","listDispatch","getRootProps","getListRootProps","listContextValue","highlightedValue","mergedListRef","focusManagement","getInitialState","selectedValues","items","selectionMode","stateReducer","useEffect","_subitems$get5","focus","_rootRef$current","contains","document","activeElement","_subitems$get6","createHandleBlur","otherHandlers","event","_otherHandlers$onBlur","_rootRef$current2","onBlur","call","defaultMuiPrevented","relatedTarget","type","blur","createHandleKeyDown","_otherHandlers$onKeyD","onKeyDown","key","escapeKeyDown","getOwnListboxHandlers","getListboxProps","externalProps","getCombinedRootProps","externalEventHandlers","role","useDebugValue","menuItems"],"sources":["R:/CryptoCare/client/node_modules/@mui/base/useMenu/useMenu.js"],"sourcesContent":["'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useForkRef as useForkRef, unstable_useId as useId, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { menuReducer } from './menuReducer';\nimport { DropdownContext } from '../useDropdown/DropdownContext';\nimport { useList } from '../useList';\nimport { DropdownActionTypes } from '../useDropdown';\nimport { useCompoundParent } from '../useCompound';\nimport { combineHooksSlotProps } from '../utils/combineHooksSlotProps';\nimport { extractEventHandlers } from '../utils/extractEventHandlers';\nconst FALLBACK_MENU_CONTEXT = {\n  dispatch: () => {},\n  popupId: '',\n  registerPopup: () => {},\n  registerTrigger: () => {},\n  state: {\n    open: true\n  },\n  triggerElement: null\n};\n\n/**\n *\n * Demos:\n *\n * - [Menu](https://mui.com/base-ui/react-menu/#hooks)\n *\n * API:\n *\n * - [useMenu API](https://mui.com/base-ui/react-menu/hooks-api/#use-menu)\n */\nexport function useMenu(parameters = {}) {\n  var _useId, _React$useContext;\n  const {\n    listboxRef: listboxRefProp,\n    onItemsChange,\n    id: idParam,\n    disabledItemsFocusable = true,\n    disableListWrap = false,\n    autoFocus = true,\n    componentName = 'useMenu'\n  } = parameters;\n  const rootRef = React.useRef(null);\n  const handleRef = useForkRef(rootRef, listboxRefProp);\n  const listboxId = (_useId = useId(idParam)) != null ? _useId : '';\n  const {\n    state: {\n      open\n    },\n    dispatch: menuDispatch,\n    triggerElement,\n    registerPopup\n  } = (_React$useContext = React.useContext(DropdownContext)) != null ? _React$useContext : FALLBACK_MENU_CONTEXT;\n\n  // store the initial open state to prevent focus stealing\n  // (the first menu items gets focued only when the menu is opened by the user)\n  const isInitiallyOpen = React.useRef(open);\n  const {\n    subitems,\n    contextValue: compoundComponentContextValue\n  } = useCompoundParent();\n  const subitemKeys = React.useMemo(() => Array.from(subitems.keys()), [subitems]);\n  const getItemDomElement = React.useCallback(itemId => {\n    var _subitems$get$ref$cur, _subitems$get;\n    if (itemId == null) {\n      return null;\n    }\n    return (_subitems$get$ref$cur = (_subitems$get = subitems.get(itemId)) == null ? void 0 : _subitems$get.ref.current) != null ? _subitems$get$ref$cur : null;\n  }, [subitems]);\n  const isItemDisabled = React.useCallback(id => {\n    var _subitems$get2;\n    return (subitems == null || (_subitems$get2 = subitems.get(id)) == null ? void 0 : _subitems$get2.disabled) || false;\n  }, [subitems]);\n  const getItemAsString = React.useCallback(id => {\n    var _subitems$get3, _subitems$get4;\n    return ((_subitems$get3 = subitems.get(id)) == null ? void 0 : _subitems$get3.label) || ((_subitems$get4 = subitems.get(id)) == null || (_subitems$get4 = _subitems$get4.ref.current) == null ? void 0 : _subitems$get4.innerText);\n  }, [subitems]);\n  const reducerActionContext = React.useMemo(() => ({\n    listboxRef: rootRef\n  }), [rootRef]);\n  const {\n    dispatch: listDispatch,\n    getRootProps: getListRootProps,\n    contextValue: listContextValue,\n    state: {\n      highlightedValue\n    },\n    rootRef: mergedListRef\n  } = useList({\n    disabledItemsFocusable,\n    disableListWrap,\n    focusManagement: 'DOM',\n    getItemDomElement,\n    getInitialState: () => ({\n      selectedValues: [],\n      highlightedValue: null\n    }),\n    isItemDisabled,\n    items: subitemKeys,\n    getItemAsString,\n    rootRef: handleRef,\n    onItemsChange,\n    reducerActionContext,\n    selectionMode: 'none',\n    stateReducer: menuReducer,\n    componentName\n  });\n  useEnhancedEffect(() => {\n    registerPopup(listboxId);\n  }, [listboxId, registerPopup]);\n  React.useEffect(() => {\n    if (open && autoFocus && highlightedValue && !isInitiallyOpen.current) {\n      var _subitems$get5;\n      (_subitems$get5 = subitems.get(highlightedValue)) == null || (_subitems$get5 = _subitems$get5.ref) == null || (_subitems$get5 = _subitems$get5.current) == null || _subitems$get5.focus();\n    }\n  }, [open, autoFocus, highlightedValue, subitems, subitemKeys]);\n  React.useEffect(() => {\n    var _rootRef$current;\n    // set focus to the highlighted item (but prevent stealing focus from other elements on the page)\n    if ((_rootRef$current = rootRef.current) != null && _rootRef$current.contains(document.activeElement) && highlightedValue !== null) {\n      var _subitems$get6;\n      subitems == null || (_subitems$get6 = subitems.get(highlightedValue)) == null || (_subitems$get6 = _subitems$get6.ref.current) == null || _subitems$get6.focus();\n    }\n  }, [highlightedValue, subitems]);\n  const createHandleBlur = otherHandlers => event => {\n    var _otherHandlers$onBlur, _rootRef$current2;\n    (_otherHandlers$onBlur = otherHandlers.onBlur) == null || _otherHandlers$onBlur.call(otherHandlers, event);\n    if (event.defaultMuiPrevented) {\n      return;\n    }\n    if ((_rootRef$current2 = rootRef.current) != null && _rootRef$current2.contains(event.relatedTarget) || event.relatedTarget === triggerElement) {\n      return;\n    }\n    menuDispatch({\n      type: DropdownActionTypes.blur,\n      event\n    });\n  };\n  const createHandleKeyDown = otherHandlers => event => {\n    var _otherHandlers$onKeyD;\n    (_otherHandlers$onKeyD = otherHandlers.onKeyDown) == null || _otherHandlers$onKeyD.call(otherHandlers, event);\n    if (event.defaultMuiPrevented) {\n      return;\n    }\n    if (event.key === 'Escape') {\n      menuDispatch({\n        type: DropdownActionTypes.escapeKeyDown,\n        event\n      });\n    }\n  };\n  const getOwnListboxHandlers = (otherHandlers = {}) => ({\n    onBlur: createHandleBlur(otherHandlers),\n    onKeyDown: createHandleKeyDown(otherHandlers)\n  });\n  const getListboxProps = (externalProps = {}) => {\n    const getCombinedRootProps = combineHooksSlotProps(getOwnListboxHandlers, getListRootProps);\n    const externalEventHandlers = extractEventHandlers(externalProps);\n    return _extends({}, externalProps, externalEventHandlers, getCombinedRootProps(externalEventHandlers), {\n      id: listboxId,\n      role: 'menu'\n    });\n  };\n  React.useDebugValue({\n    subitems,\n    highlightedValue\n  });\n  return {\n    contextValue: _extends({}, compoundComponentContextValue, listContextValue),\n    dispatch: listDispatch,\n    getListboxProps,\n    highlightedValue,\n    listboxRef: mergedListRef,\n    menuItems: subitems,\n    open,\n    triggerElement\n  };\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}