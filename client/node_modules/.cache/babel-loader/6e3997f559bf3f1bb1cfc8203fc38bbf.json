{"ast":null,"code":"'use strict';\n\nmodule.exports = function base16(alphabet) {\n  return {\n    encode(input) {\n      if (typeof input === 'string') {\n        return Buffer.from(input).toString('hex');\n      }\n\n      return input.toString('hex');\n    },\n\n    decode(input) {\n      for (let char of input) {\n        if (alphabet.indexOf(char) < 0) {\n          throw new Error('invalid base16 character');\n        }\n      }\n\n      return Buffer.from(input, 'hex');\n    }\n\n  };\n};","map":{"version":3,"names":["module","exports","base16","alphabet","encode","input","Buffer","from","toString","decode","char","indexOf","Error"],"sources":["R:/New_Block/client/node_modules/ipfs-api/node_modules/multibase/src/base16.js"],"sourcesContent":["'use strict'\n\nmodule.exports = function base16 (alphabet) {\n  return {\n    encode (input) {\n      if (typeof input === 'string') {\n        return Buffer.from(input).toString('hex')\n      }\n      return input.toString('hex')\n    },\n    decode (input) {\n      for (let char of input) {\n        if (alphabet.indexOf(char) < 0) {\n          throw new Error('invalid base16 character')\n        }\n      }\n      return Buffer.from(input, 'hex')\n    }\n  }\n}\n"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,OAAP,GAAiB,SAASC,MAAT,CAAiBC,QAAjB,EAA2B;EAC1C,OAAO;IACLC,MAAM,CAAEC,KAAF,EAAS;MACb,IAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;QAC7B,OAAOC,MAAM,CAACC,IAAP,CAAYF,KAAZ,EAAmBG,QAAnB,CAA4B,KAA5B,CAAP;MACD;;MACD,OAAOH,KAAK,CAACG,QAAN,CAAe,KAAf,CAAP;IACD,CANI;;IAOLC,MAAM,CAAEJ,KAAF,EAAS;MACb,KAAK,IAAIK,IAAT,IAAiBL,KAAjB,EAAwB;QACtB,IAAIF,QAAQ,CAACQ,OAAT,CAAiBD,IAAjB,IAAyB,CAA7B,EAAgC;UAC9B,MAAM,IAAIE,KAAJ,CAAU,0BAAV,CAAN;QACD;MACF;;MACD,OAAON,MAAM,CAACC,IAAP,CAAYF,KAAZ,EAAmB,KAAnB,CAAP;IACD;;EAdI,CAAP;AAgBD,CAjBD"},"metadata":{},"sourceType":"script"}