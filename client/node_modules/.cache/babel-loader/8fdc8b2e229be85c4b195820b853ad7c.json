{"ast":null,"code":"'use strict';\n\nconst promisify = require('promisify-es6');\n\nconst once = require('once');\n\nconst cleanMultihash = require('../utils/clean-multihash');\n\nconst SendOneFile = require('../utils/send-one-file');\n\nmodule.exports = send => {\n  const objectGet = require('./get')(send);\n\n  const sendOneFile = SendOneFile(send, 'object/patch/append-data');\n  return promisify((multihash, data, opts, _callback) => {\n    if (typeof opts === 'function') {\n      _callback = opts;\n      opts = {};\n    }\n\n    const callback = once(_callback);\n\n    if (!opts) {\n      opts = {};\n    }\n\n    try {\n      multihash = cleanMultihash(multihash, opts);\n    } catch (err) {\n      return callback(err);\n    }\n\n    sendOneFile(data, {\n      args: [multihash]\n    }, (err, result) => {\n      if (err) {\n        return callback(err);\n      }\n\n      objectGet(result.Hash, {\n        enc: 'base58'\n      }, callback);\n    });\n  });\n};","map":{"version":3,"names":["promisify","require","once","cleanMultihash","SendOneFile","module","exports","send","objectGet","sendOneFile","multihash","data","opts","_callback","callback","err","args","result","Hash","enc"],"sources":["R:/New_Block/client/node_modules/ipfs-api/src/object/appendData.js"],"sourcesContent":["'use strict'\n\nconst promisify = require('promisify-es6')\nconst once = require('once')\nconst cleanMultihash = require('../utils/clean-multihash')\nconst SendOneFile = require('../utils/send-one-file')\n\nmodule.exports = (send) => {\n  const objectGet = require('./get')(send)\n  const sendOneFile = SendOneFile(send, 'object/patch/append-data')\n\n  return promisify((multihash, data, opts, _callback) => {\n    if (typeof opts === 'function') {\n      _callback = opts\n      opts = {}\n    }\n    const callback = once(_callback)\n    if (!opts) {\n      opts = {}\n    }\n\n    try {\n      multihash = cleanMultihash(multihash, opts)\n    } catch (err) {\n      return callback(err)\n    }\n\n    sendOneFile(data, { args: [multihash] }, (err, result) => {\n      if (err) {\n        return callback(err)\n      }\n\n      objectGet(result.Hash, { enc: 'base58' }, callback)\n    })\n  })\n}\n"],"mappings":"AAAA;;AAEA,MAAMA,SAAS,GAAGC,OAAO,CAAC,eAAD,CAAzB;;AACA,MAAMC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAApB;;AACA,MAAME,cAAc,GAAGF,OAAO,CAAC,0BAAD,CAA9B;;AACA,MAAMG,WAAW,GAAGH,OAAO,CAAC,wBAAD,CAA3B;;AAEAI,MAAM,CAACC,OAAP,GAAkBC,IAAD,IAAU;EACzB,MAAMC,SAAS,GAAGP,OAAO,CAAC,OAAD,CAAP,CAAiBM,IAAjB,CAAlB;;EACA,MAAME,WAAW,GAAGL,WAAW,CAACG,IAAD,EAAO,0BAAP,CAA/B;EAEA,OAAOP,SAAS,CAAC,CAACU,SAAD,EAAYC,IAAZ,EAAkBC,IAAlB,EAAwBC,SAAxB,KAAsC;IACrD,IAAI,OAAOD,IAAP,KAAgB,UAApB,EAAgC;MAC9BC,SAAS,GAAGD,IAAZ;MACAA,IAAI,GAAG,EAAP;IACD;;IACD,MAAME,QAAQ,GAAGZ,IAAI,CAACW,SAAD,CAArB;;IACA,IAAI,CAACD,IAAL,EAAW;MACTA,IAAI,GAAG,EAAP;IACD;;IAED,IAAI;MACFF,SAAS,GAAGP,cAAc,CAACO,SAAD,EAAYE,IAAZ,CAA1B;IACD,CAFD,CAEE,OAAOG,GAAP,EAAY;MACZ,OAAOD,QAAQ,CAACC,GAAD,CAAf;IACD;;IAEDN,WAAW,CAACE,IAAD,EAAO;MAAEK,IAAI,EAAE,CAACN,SAAD;IAAR,CAAP,EAA8B,CAACK,GAAD,EAAME,MAAN,KAAiB;MACxD,IAAIF,GAAJ,EAAS;QACP,OAAOD,QAAQ,CAACC,GAAD,CAAf;MACD;;MAEDP,SAAS,CAACS,MAAM,CAACC,IAAR,EAAc;QAAEC,GAAG,EAAE;MAAP,CAAd,EAAiCL,QAAjC,CAAT;IACD,CANU,CAAX;EAOD,CAvBe,CAAhB;AAwBD,CA5BD"},"metadata":{},"sourceType":"script"}