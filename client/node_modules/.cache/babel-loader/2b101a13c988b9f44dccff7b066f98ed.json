{"ast":null,"code":"'use strict';\n\nconst bs58 = require('bs58');\n\nconst isIPFS = require('is-ipfs');\n\nmodule.exports = function (multihash) {\n  if (Buffer.isBuffer(multihash)) {\n    multihash = bs58.encode(multihash);\n  }\n\n  if (typeof multihash !== 'string') {\n    throw new Error('unexpected multihash type: ' + typeof multihash);\n  }\n\n  if (!isIPFS.multihash(multihash.split('/')[0])) {\n    throw new Error('not valid multihash');\n  }\n\n  return multihash;\n};","map":{"version":3,"names":["bs58","require","isIPFS","module","exports","multihash","Buffer","isBuffer","encode","Error","split"],"sources":["R:/New_Block/client/node_modules/ipfs-api/src/utils/clean-multihash.js"],"sourcesContent":["'use strict'\n\nconst bs58 = require('bs58')\nconst isIPFS = require('is-ipfs')\n\nmodule.exports = function (multihash) {\n  if (Buffer.isBuffer(multihash)) {\n    multihash = bs58.encode(multihash)\n  }\n  if (typeof multihash !== 'string') {\n    throw new Error('unexpected multihash type: ' + typeof multihash)\n  }\n  if (!isIPFS.multihash(multihash.split('/')[0])) {\n    throw new Error('not valid multihash')\n  }\n  return multihash\n}\n"],"mappings":"AAAA;;AAEA,MAAMA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AACA,MAAMC,MAAM,GAAGD,OAAO,CAAC,SAAD,CAAtB;;AAEAE,MAAM,CAACC,OAAP,GAAiB,UAAUC,SAAV,EAAqB;EACpC,IAAIC,MAAM,CAACC,QAAP,CAAgBF,SAAhB,CAAJ,EAAgC;IAC9BA,SAAS,GAAGL,IAAI,CAACQ,MAAL,CAAYH,SAAZ,CAAZ;EACD;;EACD,IAAI,OAAOA,SAAP,KAAqB,QAAzB,EAAmC;IACjC,MAAM,IAAII,KAAJ,CAAU,gCAAgC,OAAOJ,SAAjD,CAAN;EACD;;EACD,IAAI,CAACH,MAAM,CAACG,SAAP,CAAiBA,SAAS,CAACK,KAAV,CAAgB,GAAhB,EAAqB,CAArB,CAAjB,CAAL,EAAgD;IAC9C,MAAM,IAAID,KAAJ,CAAU,qBAAV,CAAN;EACD;;EACD,OAAOJ,SAAP;AACD,CAXD"},"metadata":{},"sourceType":"script"}