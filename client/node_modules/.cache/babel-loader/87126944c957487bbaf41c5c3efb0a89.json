{"ast":null,"code":"'use strict';\n\nconst multiaddr = require('multiaddr');\n\nconst loadCommands = require('./utils/load-commands');\n\nconst getConfig = require('./utils/default-config');\n\nconst sendRequest = require('./utils/send-request');\n\nfunction IpfsAPI(hostOrMultiaddr, port, opts) {\n  const config = getConfig();\n\n  try {\n    const maddr = multiaddr(hostOrMultiaddr).nodeAddress();\n    config.host = maddr.address;\n    config.port = maddr.port;\n  } catch (e) {\n    if (typeof hostOrMultiaddr === 'string') {\n      config.host = hostOrMultiaddr;\n      config.port = port && typeof port !== 'object' ? port : config.port;\n    }\n  }\n\n  let lastIndex = arguments.length;\n\n  while (!opts && lastIndex-- > 0) {\n    opts = arguments[lastIndex];\n    if (opts) break;\n  }\n\n  Object.assign(config, opts); // autoconfigure in browser\n\n  if (!config.host && typeof self !== 'undefined') {\n    const split = self.location.host.split(':');\n    config.host = split[0];\n    config.port = split[1];\n  }\n\n  const requestAPI = sendRequest(config);\n  const cmds = loadCommands(requestAPI, config);\n  cmds.send = requestAPI;\n  cmds.Buffer = Buffer; // Added buffer in types (this should be removed once a breaking change is release)\n\n  return cmds;\n}\n\nexports = module.exports = IpfsAPI;","map":{"version":3,"names":["multiaddr","require","loadCommands","getConfig","sendRequest","IpfsAPI","hostOrMultiaddr","port","opts","config","maddr","nodeAddress","host","address","e","lastIndex","arguments","length","Object","assign","self","split","location","requestAPI","cmds","send","Buffer","exports","module"],"sources":["R:/CryptoCare/client/node_modules/ipfs-api/src/index.js"],"sourcesContent":["'use strict'\n\nconst multiaddr = require('multiaddr')\nconst loadCommands = require('./utils/load-commands')\nconst getConfig = require('./utils/default-config')\nconst sendRequest = require('./utils/send-request')\n\nfunction IpfsAPI (hostOrMultiaddr, port, opts) {\n  const config = getConfig()\n\n  try {\n    const maddr = multiaddr(hostOrMultiaddr).nodeAddress()\n    config.host = maddr.address\n    config.port = maddr.port\n  } catch (e) {\n    if (typeof hostOrMultiaddr === 'string') {\n      config.host = hostOrMultiaddr\n      config.port = port && typeof port !== 'object' ? port : config.port\n    }\n  }\n\n  let lastIndex = arguments.length\n  while (!opts && lastIndex-- > 0) {\n    opts = arguments[lastIndex]\n    if (opts) break\n  }\n\n  Object.assign(config, opts)\n\n  // autoconfigure in browser\n  if (!config.host &&\n    typeof self !== 'undefined') {\n    const split = self.location.host.split(':')\n    config.host = split[0]\n    config.port = split[1]\n  }\n\n  const requestAPI = sendRequest(config)\n  const cmds = loadCommands(requestAPI, config)\n  cmds.send = requestAPI\n  cmds.Buffer = Buffer // Added buffer in types (this should be removed once a breaking change is release)\n\n  return cmds\n}\n\nexports = module.exports = IpfsAPI\n"],"mappings":"AAAA;;AAEA,MAAMA,SAAS,GAAGC,OAAO,CAAC,WAAD,CAAzB;;AACA,MAAMC,YAAY,GAAGD,OAAO,CAAC,uBAAD,CAA5B;;AACA,MAAME,SAAS,GAAGF,OAAO,CAAC,wBAAD,CAAzB;;AACA,MAAMG,WAAW,GAAGH,OAAO,CAAC,sBAAD,CAA3B;;AAEA,SAASI,OAAT,CAAkBC,eAAlB,EAAmCC,IAAnC,EAAyCC,IAAzC,EAA+C;EAC7C,MAAMC,MAAM,GAAGN,SAAS,EAAxB;;EAEA,IAAI;IACF,MAAMO,KAAK,GAAGV,SAAS,CAACM,eAAD,CAAT,CAA2BK,WAA3B,EAAd;IACAF,MAAM,CAACG,IAAP,GAAcF,KAAK,CAACG,OAApB;IACAJ,MAAM,CAACF,IAAP,GAAcG,KAAK,CAACH,IAApB;EACD,CAJD,CAIE,OAAOO,CAAP,EAAU;IACV,IAAI,OAAOR,eAAP,KAA2B,QAA/B,EAAyC;MACvCG,MAAM,CAACG,IAAP,GAAcN,eAAd;MACAG,MAAM,CAACF,IAAP,GAAcA,IAAI,IAAI,OAAOA,IAAP,KAAgB,QAAxB,GAAmCA,IAAnC,GAA0CE,MAAM,CAACF,IAA/D;IACD;EACF;;EAED,IAAIQ,SAAS,GAAGC,SAAS,CAACC,MAA1B;;EACA,OAAO,CAACT,IAAD,IAASO,SAAS,KAAK,CAA9B,EAAiC;IAC/BP,IAAI,GAAGQ,SAAS,CAACD,SAAD,CAAhB;IACA,IAAIP,IAAJ,EAAU;EACX;;EAEDU,MAAM,CAACC,MAAP,CAAcV,MAAd,EAAsBD,IAAtB,EApB6C,CAsB7C;;EACA,IAAI,CAACC,MAAM,CAACG,IAAR,IACF,OAAOQ,IAAP,KAAgB,WADlB,EAC+B;IAC7B,MAAMC,KAAK,GAAGD,IAAI,CAACE,QAAL,CAAcV,IAAd,CAAmBS,KAAnB,CAAyB,GAAzB,CAAd;IACAZ,MAAM,CAACG,IAAP,GAAcS,KAAK,CAAC,CAAD,CAAnB;IACAZ,MAAM,CAACF,IAAP,GAAcc,KAAK,CAAC,CAAD,CAAnB;EACD;;EAED,MAAME,UAAU,GAAGnB,WAAW,CAACK,MAAD,CAA9B;EACA,MAAMe,IAAI,GAAGtB,YAAY,CAACqB,UAAD,EAAad,MAAb,CAAzB;EACAe,IAAI,CAACC,IAAL,GAAYF,UAAZ;EACAC,IAAI,CAACE,MAAL,GAAcA,MAAd,CAjC6C,CAiCxB;;EAErB,OAAOF,IAAP;AACD;;AAEDG,OAAO,GAAGC,MAAM,CAACD,OAAP,GAAiBtB,OAA3B"},"metadata":{},"sourceType":"script"}