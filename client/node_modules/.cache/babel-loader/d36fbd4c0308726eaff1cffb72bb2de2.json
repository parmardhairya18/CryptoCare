{"ast":null,"code":"'use strict';\n\nconst rsa = require('./keys/rsa');\n\nfunction randomBytes(number) {\n  if (!number || typeof number !== 'number') {\n    throw new Error('first argument must be a Number bigger than 0');\n  }\n\n  return rsa.getRandomValues(new Uint8Array(number));\n}\n\nmodule.exports = randomBytes;","map":{"version":3,"names":["rsa","require","randomBytes","number","Error","getRandomValues","Uint8Array","module","exports"],"sources":["R:/CryptoCare/client/node_modules/ipfs-api/node_modules/peer-info/node_modules/libp2p-crypto/src/random-bytes.js"],"sourcesContent":["'use strict'\n\nconst rsa = require('./keys/rsa')\n\nfunction randomBytes (number) {\n  if (!number || typeof number !== 'number') {\n    throw new Error('first argument must be a Number bigger than 0')\n  }\n\n  return rsa.getRandomValues(new Uint8Array(number))\n}\n\nmodule.exports = randomBytes\n"],"mappings":"AAAA;;AAEA,MAAMA,GAAG,GAAGC,OAAO,CAAC,YAAD,CAAnB;;AAEA,SAASC,WAAT,CAAsBC,MAAtB,EAA8B;EAC5B,IAAI,CAACA,MAAD,IAAW,OAAOA,MAAP,KAAkB,QAAjC,EAA2C;IACzC,MAAM,IAAIC,KAAJ,CAAU,+CAAV,CAAN;EACD;;EAED,OAAOJ,GAAG,CAACK,eAAJ,CAAoB,IAAIC,UAAJ,CAAeH,MAAf,CAApB,CAAP;AACD;;AAEDI,MAAM,CAACC,OAAP,GAAiBN,WAAjB"},"metadata":{},"sourceType":"script"}