{"ast":null,"code":"var _jsxFileName = \"R:\\\\CryptoCare\\\\client\\\\src\\\\pages\\\\admin\\\\RegisterHospital.jsx\",\n    _s = $RefreshSig$();\n\nimport { Box, Divider, FormControl, Modal, TextField, Typography, Backdrop, CircularProgress } from '@mui/material';\nimport React from 'react';\nimport useEth from '../../contexts/EthContext/useEth';\nimport PersonAddAlt1RoundedIcon from '@mui/icons-material/PersonAddAlt1Rounded';\nimport CustomButton from '../../components/CustomButton';\nimport { useNavigate } from 'react-router-dom';\nimport useAlert from '../../contexts/AlertContext/useAlert';\nimport { useState } from 'react';\nimport '../../App.css';\nimport validator from 'validator';\nimport AdminAccess from '../../components/access/adminAccess';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst RegisterHospital = () => {\n  _s();\n\n  const [hospitalAddress, setHospitalAddress] = useState('');\n  const [hospitalName, setHospitalName] = useState('');\n  const [hospitalContact, setHospitalContact] = useState('');\n  const {\n    state: {\n      contract,\n      accounts,\n      role,\n      loading\n    }\n  } = useEth();\n  const {\n    setAlert\n  } = useAlert();\n  const navigate = useNavigate();\n\n  const registerHospital = async () => {\n    try {\n      if (!/^(0x)?[0-9a-f]{40}$/i.test(hospitalAddress)) {\n        setAlert('Please enter a valid hospital address', 'error');\n        return;\n      }\n\n      if (hospitalName == \"\") {\n        setAlert('Please enter valid hospital name', 'error');\n        return;\n      }\n\n      if (!validator.isMobilePhone(hospitalContact, 'en-IN')) {\n        setAlert(\"Please enter valid hospital mobile no\", 'error');\n        return;\n      }\n\n      await contract.methods.addHospital(hospitalAddress, hospitalName, hospitalContact).send({\n        from: accounts[0]\n      });\n      setAlert('Hospital Added Successfully!', 'success'); // dispatch({\n      //   type: 'ADD_DOCTOR',\n      // })\n    } catch (err) {\n      setAlert(\"transaction failed!\", 'error');\n      console.error(err);\n    }\n  };\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Backdrop, {\n      sx: {\n        color: '#fff',\n        zIndex: theme => theme.zIndex.drawer + 1\n      },\n      open: loading,\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n        color: \"inherit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [role === 'admin' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"register-doctor\",\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            display: \"flex\",\n            alignItems: \"center\",\n            my: 1,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                color: \"secondary\",\n                variant: \"outlined\",\n                placeholder: \"Enter hospital address\",\n                value: hospitalAddress,\n                onChange: e => setHospitalAddress(e.target.value),\n                InputProps: {\n                  style: {\n                    fontSize: '15px'\n                  }\n                },\n                InputLabelProps: {\n                  style: {\n                    fontSize: '15px'\n                  }\n                },\n                size: \"small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            display: \"flex\",\n            alignItems: \"center\",\n            my: 1,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                color: \"secondary\",\n                variant: \"outlined\",\n                placeholder: \"Enter hospital Name\",\n                value: hospitalName,\n                onChange: e => setHospitalName(e.target.value),\n                InputProps: {\n                  style: {\n                    fontSize: '15px'\n                  }\n                },\n                InputLabelProps: {\n                  style: {\n                    fontSize: '15px'\n                  }\n                },\n                size: \"small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            display: \"flex\",\n            alignItems: \"center\",\n            my: 1,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                color: \"secondary\",\n                variant: \"outlined\",\n                placeholder: \"Enter hospital Mobile Number\",\n                value: hospitalContact,\n                onChange: e => setHospitalContact(e.target.value),\n                InputProps: {\n                  style: {\n                    fontSize: '15px'\n                  }\n                },\n                InputLabelProps: {\n                  style: {\n                    fontSize: '15px'\n                  }\n                },\n                size: \"small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n            text: \"Hospital Register\",\n            handleClick: () => registerHospital(),\n            children: /*#__PURE__*/_jsxDEV(PersonAddAlt1RoundedIcon, {\n              style: {\n                color: 'white'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            color: \"black\",\n            children: \"If you are a patient, ask your doctor to register for you\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(AdminAccess, {\n        role: role\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n};\n\n_s(RegisterHospital, \"QdRG0FpXTCZ8yRHKSngo2WEBiy8=\", false, function () {\n  return [useEth, useAlert, useNavigate];\n});\n\n_c = RegisterHospital;\nexport default RegisterHospital;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterHospital\");","map":{"version":3,"names":["Box","Divider","FormControl","Modal","TextField","Typography","Backdrop","CircularProgress","React","useEth","PersonAddAlt1RoundedIcon","CustomButton","useNavigate","useAlert","useState","validator","AdminAccess","RegisterHospital","hospitalAddress","setHospitalAddress","hospitalName","setHospitalName","hospitalContact","setHospitalContact","state","contract","accounts","role","loading","setAlert","navigate","registerHospital","test","isMobilePhone","methods","addHospital","send","from","err","console","error","color","zIndex","theme","drawer","e","target","value","style","fontSize"],"sources":["R:/CryptoCare/client/src/pages/admin/RegisterHospital.jsx"],"sourcesContent":["import { Box, Divider, FormControl, Modal, TextField, Typography, Backdrop, CircularProgress } from '@mui/material'\r\nimport React from 'react'\r\nimport useEth from '../../contexts/EthContext/useEth'\r\nimport PersonAddAlt1RoundedIcon from '@mui/icons-material/PersonAddAlt1Rounded'\r\nimport CustomButton from '../../components/CustomButton'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport useAlert from '../../contexts/AlertContext/useAlert'\r\nimport { useState } from 'react'\r\nimport '../../App.css'\r\nimport validator from 'validator'\r\nimport AdminAccess from '../../components/access/adminAccess'\r\n\r\nconst RegisterHospital = () => {\r\n\r\nconst [hospitalAddress,setHospitalAddress] = useState('')\r\nconst [hospitalName,setHospitalName] = useState('')\r\nconst [hospitalContact,setHospitalContact] = useState('')\r\n\r\n\r\n  const {\r\n    state: { contract, accounts, role, loading }\r\n  } = useEth()\r\n\r\n  const {setAlert} = useAlert()\r\n  const navigate = useNavigate()\r\n\r\n  const registerHospital = async () => {\r\n    try {\r\n    \r\n       if (!/^(0x)?[0-9a-f]{40}$/i.test(hospitalAddress)) {\r\n        setAlert('Please enter a valid hospital address', 'error')\r\n        return\r\n      }\r\n      if(hospitalName == \"\"){\r\n        setAlert('Please enter valid hospital name','error')\r\n        return\r\n      }\r\n      if(!validator.isMobilePhone(hospitalContact,'en-IN')){\r\n        setAlert(\"Please enter valid hospital mobile no\",'error')\r\n        return\r\n      }\r\n    \r\n\r\n      await contract.methods.addHospital(hospitalAddress,hospitalName,hospitalContact).send({ from: accounts[0] })\r\n      setAlert('Hospital Added Successfully!','success')\r\n      // dispatch({\r\n      //   type: 'ADD_DOCTOR',\r\n      // })\r\n    } catch (err) {\r\n      setAlert(\"transaction failed!\",'error')\r\n      console.error(err)\r\n    }\r\n  }\r\n   if (loading) {\r\n    return (\r\n      <Backdrop sx={{ color: '#fff', zIndex: theme => theme.zIndex.drawer + 1 }} open={loading}>\r\n        <CircularProgress color='inherit' />\r\n      </Backdrop>\r\n    )\r\n  }\r\n  else{\r\n\r\n   return (\r\n    <>\r\n      {role === 'admin' && (\r\n          <div className='register-doctor'>\r\n          <Box display='flex' flexDirection='column' alignItems='center'>\r\n            {/*<Box mb={2}>*/}\r\n                  <Box display='flex' alignItems='center' my={1}>\r\n                    <FormControl fullWidth>\r\n                      <TextField\r\n                        color='secondary'\r\n                        variant='outlined'\r\n                        placeholder='Enter hospital address'\r\n                        value={hospitalAddress}\r\n                        onChange={e => setHospitalAddress(e.target.value)}\r\n                        InputProps={{ style: { fontSize: '15px'} }}\r\n                        InputLabelProps={{ style: { fontSize: '15px'} }}\r\n                        size='small'\r\n                      />\r\n                    </FormControl>\r\n                  </Box>\r\n                  <Box display='flex' alignItems='center' my={1}>\r\n                    <FormControl fullWidth>\r\n                      <TextField\r\n                        color='secondary'\r\n                        variant='outlined'\r\n                        placeholder='Enter hospital Name'\r\n                        value={hospitalName}\r\n                        onChange={e => setHospitalName(e.target.value)}\r\n                        InputProps={{ style: { fontSize: '15px'} }}\r\n                        InputLabelProps={{ style: { fontSize: '15px'} }}\r\n                        size='small'\r\n                      />\r\n                    </FormControl>\r\n                  </Box>\r\n                  <Box display='flex' alignItems='center' my={1}>\r\n                    <FormControl fullWidth>\r\n                      <TextField\r\n                        color='secondary'\r\n                        variant='outlined'\r\n                        placeholder='Enter hospital Mobile Number'\r\n                        value={hospitalContact}\r\n                        onChange={e => setHospitalContact(e.target.value)}\r\n                        InputProps={{ style: { fontSize: '15px'} }}\r\n                        InputLabelProps={{ style: { fontSize: '15px'} }}\r\n                        size='small'\r\n                      />\r\n                    </FormControl>\r\n                  </Box>\r\n              <CustomButton text='Hospital Register' handleClick={() => registerHospital()}>\r\n                <PersonAddAlt1RoundedIcon style={{ color: 'white' }} />\r\n              </CustomButton>\r\n            {/*</Box>*/}\r\n            <Typography variant='h5' color='black'>\r\n              If you are a patient, ask your doctor to register for you\r\n            </Typography>\r\n          </Box>\r\n          </div> \r\n\r\n        )}\r\n        <AdminAccess role={role}/>\r\n     \r\n          </>\r\n        )\r\n }\r\n\r\n}\r\n\r\nexport default RegisterHospital"],"mappings":"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"},"metadata":{},"sourceType":"module"}