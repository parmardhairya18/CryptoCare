{"ast":null,"code":"'use strict';\n\nconst promisify = require('promisify-es6');\n\nconst cleanMultihash = require('../utils/clean-multihash');\n\nmodule.exports = send => {\n  return promisify((multihash, opts, callback) => {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n\n    if (!opts) {\n      opts = {};\n    }\n\n    try {\n      multihash = cleanMultihash(multihash, opts);\n    } catch (err) {\n      return callback(err);\n    }\n\n    send({\n      path: 'object/stat',\n      args: multihash\n    }, callback);\n  });\n};","map":{"version":3,"names":["promisify","require","cleanMultihash","module","exports","send","multihash","opts","callback","err","path","args"],"sources":["R:/CryptoCare/client/node_modules/ipfs-api/src/object/stat.js"],"sourcesContent":["'use strict'\n\nconst promisify = require('promisify-es6')\nconst cleanMultihash = require('../utils/clean-multihash')\n\nmodule.exports = (send) => {\n  return promisify((multihash, opts, callback) => {\n    if (typeof opts === 'function') {\n      callback = opts\n      opts = {}\n    }\n    if (!opts) {\n      opts = {}\n    }\n\n    try {\n      multihash = cleanMultihash(multihash, opts)\n    } catch (err) {\n      return callback(err)\n    }\n\n    send({\n      path: 'object/stat',\n      args: multihash\n    }, callback)\n  })\n}\n"],"mappings":"AAAA;;AAEA,MAAMA,SAAS,GAAGC,OAAO,CAAC,eAAD,CAAzB;;AACA,MAAMC,cAAc,GAAGD,OAAO,CAAC,0BAAD,CAA9B;;AAEAE,MAAM,CAACC,OAAP,GAAkBC,IAAD,IAAU;EACzB,OAAOL,SAAS,CAAC,CAACM,SAAD,EAAYC,IAAZ,EAAkBC,QAAlB,KAA+B;IAC9C,IAAI,OAAOD,IAAP,KAAgB,UAApB,EAAgC;MAC9BC,QAAQ,GAAGD,IAAX;MACAA,IAAI,GAAG,EAAP;IACD;;IACD,IAAI,CAACA,IAAL,EAAW;MACTA,IAAI,GAAG,EAAP;IACD;;IAED,IAAI;MACFD,SAAS,GAAGJ,cAAc,CAACI,SAAD,EAAYC,IAAZ,CAA1B;IACD,CAFD,CAEE,OAAOE,GAAP,EAAY;MACZ,OAAOD,QAAQ,CAACC,GAAD,CAAf;IACD;;IAEDJ,IAAI,CAAC;MACHK,IAAI,EAAE,aADH;MAEHC,IAAI,EAAEL;IAFH,CAAD,EAGDE,QAHC,CAAJ;EAID,CAnBe,CAAhB;AAoBD,CArBD"},"metadata":{},"sourceType":"script"}